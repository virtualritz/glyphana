[package]
name = "glyphana"
version = "0.1.4"
authors = ["Moritz Moeller <virtualritz@gmail.com>"]
edition = "2021"
description = "Quickly find, inspect & collect unicode glyps"
license = "(MIT OR Apache-2.0 OR BSD-3-Clause) AND OFL-1.1"
exclude = [".github/**/*", "wix/*"]
readme = "README.md"
documentation = "https://docs.rs/glyphana/"
repository = "https://github.com/virtualritz/glyphana/"

[dependencies]
ahash = "0.8.3"
bytemuck = "1.13.1"
eframe = { version = "0.21", default-features = false, features = [
    #"accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    #"wgpu"           # Alternative backend if "glow" gives your trouble.
] }
egui = "0.21"
encode_unicode = "1.0.0"
#enigo = "0.0.14"
enum_dispatch = "0.3.11"
finl_unicode = "1.2.0"
glyph-names = "0.2.0"
#gtk = "0.16.0"
image = { version = "0.24.5", default-features = false, features = ["png"] }
include-flate = "0.2.0"
log = "0.4.17"
#log = "0.4.17"
rusttype = "0.9.3"
serde = { version = "1", features = ["derive"] }
textwrap = "0.16.0"
tracing-subscriber = "0.3"
#tray-icon = "0.4.3"
unicode-blocks =  { version = "0.1.5", features = ["all"] }
unicode-case-mapping = "0.5.0"
unicode_names2 = "0.6.0"
unicode_skeleton = "0.1.1"

[patch.crates-io]
egui = { git = "https://github.com/emilk/egui", branch = "master" } # rev = "4bd4eca2e4b440ca585d8844740afd8144ba7dbc" } # branch = "master" }
eframe = { git = "https://github.com/emilk/egui", branch = "master" } # rev = "4bd4eca2e4b440ca585d8844740afd8144ba7dbc" } # branch = "master" }
unicode_skeleton = { git = "https://github.com/virtualritz/unicode_skeleton.git", branch = "master" }
unicode-blocks = { git = "https://github.com/virtualritz/unicode-blocks.git", branch = "master" }
rusttype = { git = "https://gitlab.redox-os.org/virtualritz/rusttype.git", branch = "master" }
#decancer = { git = "https://github.com/null8626/decancer.git", branch = "main" }
#tray-icon = { git = "https://github.com/tauri-apps/tray-icon.git", branch = "dev" }
#enigo = { git = "https://github.com/enigo-rs/enigo.git", branch = "master" }

[profile.release]
opt-level = 3 # 2 = fast and small wasm
codegen-units = 1
lto = true
strip = true
panic = "abort"

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2
#incremental = true

# generated by 'cargo dist init'
[profile.dist]
inherits = "release"
#debug = true#split-debuginfo = "packed"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.0.3-prerelease04"
# The preferred Rust toolchain to use in CI (rustup toolchain syntax)
rust-toolchain-version = "nightly"
# CI backends to support (see 'cargo dist generate-ci')
ci = ["github"]
# The installers to generate for each app
installers = ["shell", "powershell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-pc-windows-msvc"]
